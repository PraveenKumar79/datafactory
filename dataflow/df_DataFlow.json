{
	"name": "df_DataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsSIPMain2024",
						"type": "DatasetReference"
					},
					"name": "srcMain2024"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sqlServerOnPremise",
						"type": "DatasetReference"
					},
					"name": "snkDestination"
				}
			],
			"transformations": [
				{
					"name": "altRwUpsert"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SlNo as string,",
				"          AccountName as string,",
				"          FolioNumber as string,",
				"          TransactionType as string,",
				"          SchemeName as string,",
				"          Price as string,",
				"          Amount as string,",
				"          Units as string,",
				"          TransactionDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:['*.csv']) ~> srcMain2024",
				"srcMain2024 alterRow(upsertIf(true())) ~> altRwUpsert",
				"altRwUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SlNo as integer,",
				"          AccountName as string,",
				"          FolioNumber as string,",
				"          TransactionType as string,",
				"          SchemeName as string,",
				"          Price as decimal(18,2),",
				"          Amount as decimal(18,2),",
				"          Units as decimal(18,2),",
				"          TransactionDate as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['FolioNumber','TransactionType','SchemeName'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          SlNo,",
				"          each(match(type=='string'))",
				"     )) ~> snkDestination"
			]
		}
	}
}